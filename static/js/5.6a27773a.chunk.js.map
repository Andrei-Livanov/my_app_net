{"version":3,"file":"static/js/5.6a27773a.chunk.js","mappings":"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","sources":["webpack://my_app_net/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my_app_net/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my_app_net/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://my_app_net/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9zEgp\",\"mainPhoto\":\"ProfileInfo_mainPhoto__knMp+\",\"avatar\":\"ProfileInfo_avatar__6ZVOo\",\"fullName\":\"ProfileInfo_fullName__-UfhI\",\"status\":\"ProfileInfo_status__Wpqev\",\"contact\":\"ProfileInfo_contact__tv66I\"};","import {useEffect, useState} from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div className={styles.status}>\r\n                    <b>Status:</b> <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport userPhoto from '../../../assets/images/avatar.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={profile.photos.large || userPhoto} className={styles.mainPhoto} alt='picture'/>\r\n                {isOwner && <input type='file' onChange={onMainPhotoSelected} className={styles.avatar}/>}\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n                <ProfileData profile={profile}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst ProfileData = ({profile}) => {\r\n    return (\r\n        <div>\r\n            <div className={styles.fullName}>\r\n                <b>Full name</b>: {profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job</b>: {profile.lookingForAJob ? 'yes' : 'no'}\r\n            </div>\r\n            {\r\n                profile.lookingForAJob &&\r\n                <div>\r\n                    <b>My professional skills</b>: {profile.lookingForAJobDescription}\r\n                </div>\r\n            }\r\n            <div>\r\n                <b>About me</b>: {profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts</b>: {Object.keys(profile.contacts).map(key => {\r\n                return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n            })}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    return <div className={styles.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__SM2a6\",\"posts\":\"MyPosts_posts__rvA+S\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__9MhxP\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://avatars.mds.yandex.net/i?id=90baeefbf60fd8427e5b14ae9b5ed3c6-4936646-images-thumbs&n=13&exp=1'\r\n                alt=''/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n\r\n    let postsElements =\r\n        [...props.posts].reverse().map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={styles.posts}>{postsElements}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder='Post message'\r\n                       validate={[required, maxLengthCreator(10)]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo\r\n                profile={props.profile}\r\n                status={props.status}\r\n                updateStatus={props.updateStatus}\r\n                isOwner={props.isOwner}\r\n                savePhoto={props.savePhoto}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, savePhoto, updateStatus} from '../../redux/profile-reducer';\r\nimport {compose} from 'redux';\r\nimport {withRouter} from '../../hoc/withRoute';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import styles from './FormsControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/>{text}\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__P3At6\",\"error\":\"FormsControls_error__ORnv4\",\"formSummaryError\":\"FormsControls_formSummaryError__2S3wj\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","className","styles","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileData","profile","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Object","keys","contacts","map","key","Contact","contactTitle","contactValue","isOwner","savePhoto","Preloader","src","photos","large","userPhoto","alt","type","target","files","length","s","message","likesCount","MyPosts","React","console","log","postsElements","posts","reverse","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","maxLengthCreator","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter","withAuthRedirect","FormControl","meta","touched","error","children","hasError","input","restProps","child","Input","createField","validators","text","mapStateToPropsForRedirect","Component","RedirectComponent","to","maxLength"],"sourceRoot":""}