{"version":3,"file":"static/js/489.50216402.chunk.js","mappings":"wPAQMA,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,EAAAA,MAAAA,KAAAA,WAsBD,OAtBCA,EAAAA,EAAAA,GAAAA,EAAAA,CAAAA,CAAAA,IAAAA,iBAAAA,MACF,WACI,IAAIC,EAASC,KAAKC,MAAMC,MAAMC,OAAOJ,OAChCA,IACDA,EAASC,KAAKC,MAAMG,kBAExBJ,KAAKC,MAAMI,eAAeN,GAC1BC,KAAKC,MAAMK,cAAcP,KAC5B,+BAED,WACIC,KAAKO,mBACR,gCAED,SAAmBC,EAAWC,EAAWC,GACjCV,KAAKC,MAAMC,MAAMC,OAAOJ,SAAWS,EAAUN,MAAMC,OAAOJ,QAC1DC,KAAKO,mBAEZ,oBAED,WACI,OAAO,SAAC,KAAD,kBAAaP,KAAKC,OAAlB,IAAyBU,SAAUX,KAAKC,MAAMC,MAAMC,OAAOJ,OAAQa,UAAWZ,KAAKC,MAAMW,iBACnG,EAtBCd,CAAyBe,EAAAA,WAgC/B,WAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KARoB,SAACC,GAAD,MAAY,CAChCC,QAASD,EAAME,YAAYD,QAC3BE,OAAQH,EAAME,YAAYC,OAC1Bf,iBAAkBY,EAAMI,KAAKrB,OAC7BsB,OAAQL,EAAMI,KAAKC,UAIM,CAAChB,eAAAA,EAAAA,GAAgBC,cAAAA,EAAAA,GAAegB,aAAAA,EAAAA,GAAcV,UAAAA,EAAAA,KACvEW,EAAAA,EACAC,EAAAA,EAHJ,CAIE1B,I,iJCxCI2B,EAA6B,SAACT,GAAD,MAAY,CAC3CK,OAAQL,EAAMI,KAAKC,SAGVG,EAAmB,SAACE,GAAe,IAEtCC,EAFqC,0IAGvC,WACI,OAAK3B,KAAKC,MAAMoB,QACT,SAACK,GAAD,UAAe1B,KAAKC,SADI,SAAC,KAAD,CAAU2B,GAAG,eAJT,GAEXf,EAAAA,WAOhC,OAAOE,EAAAA,EAAAA,IAAQU,EAARV,CAAoCY","sources":["components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, savePhoto, updateStatus} from '../../redux/profile-reducer';\r\nimport {compose} from 'redux';\r\nimport {withRouter} from '../../hoc/withRoute';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props} isOwner={!this.props.match.params.userId} savePhoto={this.props.savePhoto}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import React from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n"],"names":["ProfileContainer","userId","this","props","match","params","authorizedUserId","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","isOwner","savePhoto","React","compose","connect","state","profile","profilePage","status","auth","isAuth","updateStatus","withRouter","withAuthRedirect","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}