{"version":3,"file":"static/js/725.6e3340f5.chunk.js","mappings":"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","sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://my_app_net/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my_app_net/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/FormsControls/FormsControls.js","hoc/withAuthRedirect.js","utils/validators/validators.js","webpack://my_app_net/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__9zEgp\"};","import {useEffect, useState} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import styles from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport photo from '../../../assets/images/myphoto.png';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={styles.descriptionBlock}>\r\n                <img src={profile.photos.large || photo} alt='Photo'/>\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProfileInfo;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"postsBlock\":\"MyPosts_postsBlock__SM2a6\",\"posts\":\"MyPosts_posts__rvA+S\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__9MhxP\"};","import s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src='https://avatars.mds.yandex.net/i?id=90baeefbf60fd8427e5b14ae9b5ed3c6-4936646-images-thumbs&n=13&exp=1'\r\n                alt=''/>\r\n            {props.message}\r\n            <div>\r\n                <span>like</span> {props.likesCount}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react';\r\nimport styles from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from 'redux-form';\r\nimport {maxLengthCreator, required} from '../../../utils/validators/validators';\r\nimport {Textarea} from '../../common/FormsControls/FormsControls';\r\n\r\nconst MyPosts = React.memo(props => {\r\n    console.log(\"RENDER\");\r\n\r\n    let postsElements =\r\n        [...props.posts].reverse().map(p => <Post key={p.id} message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={styles.posts}>{postsElements}</div>\r\n        </div>\r\n    );\r\n});\r\n\r\nconst AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} name='newPostText' placeholder='Post message'\r\n                       validate={[required, maxLengthCreator(10)]}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({form: 'ProfileAddNewPostForm'})(AddNewPostForm);\r\n\r\nexport default MyPosts;\r\n","import {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts'\r\nimport {connect} from 'react-redux'\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer\r\n","import ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Profile from './Profile';\r\nimport {connect} from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateStatus} from '../../redux/profile-reducer';\r\nimport {compose} from 'redux';\r\nimport {withRouter} from '../../hoc/withRoute';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRedirect';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateStatus}),\r\n    withRouter,\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import styles from './FormsControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/>{text}\r\n    </div>\r\n)\r\n","import React from 'react';\r\nimport {Navigate} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\n\r\nconst mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to='/login'/>;\r\n            return <Component {...this.props}/>;\r\n        }\r\n    }\r\n\r\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__P3At6\",\"error\":\"FormsControls_error__ORnv4\",\"formSummaryError\":\"FormsControls_formSummaryError__2S3wj\"};"],"names":["props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","className","styles","src","photos","large","photo","alt","Preloader","s","message","likesCount","MyPosts","React","console","log","postsElements","posts","reverse","map","p","id","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","maxLengthCreator","connect","state","profilePage","dispatch","addPostActionCreator","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getUserStatus","compose","auth","isAuth","withRouter","withAuthRedirect","FormControl","meta","touched","error","children","hasError","input","restProps","child","Input","createField","validators","text","mapStateToPropsForRedirect","Component","RedirectComponent","to","maxLength","length"],"sourceRoot":""}