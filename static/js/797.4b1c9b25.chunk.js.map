{"version":3,"file":"static/js/797.4b1c9b25.chunk.js","mappings":"sMA8BMA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAtBL,SAAC,GAAuC,IAAtCE,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,WACrC,OACI,kBAAMC,SAAUH,EAAhB,WACKI,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAACC,KAAM,cAC9DH,EAAAA,EAAAA,IACG,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAM,YAAa,eAEtDL,IAAc,gBAAKM,IAAKN,EAAYO,IAAI,YACxCP,IAAcE,EAAAA,EAAAA,IACX,qBAAsB,UAAW,CAACC,EAAAA,GAAWC,EAAAA,GAAO,KAExD,yBACKL,IAAS,gBAAKS,UAAWC,EAAAA,EAAAA,iBAAhB,SAA0CV,OAExD,0BACI,8CA8BhB,WAAeW,EAAAA,EAAAA,KALS,SAACC,GAAD,MAAY,CAChCX,WAAYW,EAAMC,KAAKZ,WACvBa,OAAQF,EAAMC,KAAKC,UAGiB,CAACC,MAAAA,EAAAA,GAAOC,OAAAA,EAAAA,IAAhD,EAtBc,SAACC,GAKX,OAAIA,EAAMH,QACC,SAAC,KAAD,CAAUI,GAAI,cAIrB,4BACI,mCACA,SAACtB,EAAD,CAAgBM,SAXP,SAACiB,GACdF,EAAMF,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG,WAAYH,EAASI,UAUrCtB,WAAYgB,EAAMhB,oB,iNCzC5DuB,EAAc,SAAC,GAAwC,IAAD,IAAtCC,KAAOC,EAA+B,EAA/BA,QAAS1B,EAAsB,EAAtBA,MAAQ2B,EAAc,EAAdA,SACpCC,EAAWF,GAAW1B,EAC5B,OACI,iBAAKS,UAAWC,EAAAA,EAAAA,YAAqB,KAAOkB,EAAWlB,EAAAA,EAAAA,MAAe,IAAtE,WACI,yBAAMiB,IACLC,IAAY,0BAAO5B,QAKnB6B,EAAW,SAACZ,GACrB,IAAOa,EAAoCb,EAApCa,MAAuBC,GAAad,EAA7BQ,KAA6BR,EAAvBe,OAApB,OAA2Cf,EAA3C,IACA,OAAO,SAACO,GAAD,kBAAiBP,GAAjB,cAAwB,uCAAca,GAAWC,QAG/C1B,EAAQ,SAACY,GAClB,IAAOa,EAAoCb,EAApCa,MAAuBC,GAAad,EAA7BQ,KAA6BR,EAAvBe,OAApB,OAA2Cf,EAA3C,IACA,OAAO,SAACO,GAAD,kBAAiBP,GAAjB,cAAwB,oCAAWa,GAAWC,QAG5C5B,EAAc,SAAC8B,EAAaC,EAAMC,EAAYC,GAAhC,IAA2CnB,EAA3C,uDAAmD,GAAIoB,EAAvD,uDAA8D,GAA9D,OACvB,4BACI,SAAC,KAAD,QAAOJ,YAAaA,EAAaC,KAAMA,EAAMI,SAAUH,EAAYC,UAAWA,GAAenB,IAASoB,O,4ECzBvG,IAAMjC,EAAW,SAAAmC,GACpB,IAAIA,EACJ,MAAO,qBAGEC,EAAmB,SAACC,GAAD,OAAe,SAAAF,GAC3C,GAAIA,EAAMG,OAASD,EAAW,MAAM,iBAAN,OAAwBA,EAAxB,e,mBCLlC,KAAgB,YAAc,mCAAmC,MAAQ,6BAA6B,iBAAmB","sources":["components/Login/Login.jsx","components/common/FormsControls/FormsControls.js","utils/validators/validators.js","webpack://my_app_net/./src/components/common/FormsControls/FormsControls.module.css?eb50"],"sourcesContent":["import {reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login, logout} from '../../redux/auth-reducer';\r\nimport {Navigate} from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(\r\n                null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt='captcha'/>}\r\n            {captchaUrl && createField(\r\n                'Symbols from image', 'captcha', [required], Input, {})}\r\n\r\n            <div>\r\n                {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={'/profile'}/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    captchaUrl: state.auth.captchaUrl,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);\r\n","import styles from './FormsControls.module.css';\r\nimport {Field} from 'redux-form';\r\n\r\nconst FormControl = ({meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>{children}</div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} validate={validators} component={component} {...props}/>{text}\r\n    </div>\r\n)\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => value => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"formControl\":\"FormsControls_formControl__P3At6\",\"error\":\"FormsControls_error__ORnv4\",\"formSummaryError\":\"FormsControls_formSummaryError__2S3wj\"};"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","captchaUrl","onSubmit","createField","required","Input","type","src","alt","className","styles","connect","state","auth","isAuth","login","logout","props","to","formData","email","password","rememberMe","captcha","FormControl","meta","touched","children","hasError","Textarea","input","restProps","child","placeholder","name","validators","component","text","validate","value","maxLengthCreator","maxLength","length"],"sourceRoot":""}