{"version":3,"file":"static/js/797.97695aec.chunk.js","mappings":"sMAyBMA,GAAiBC,EAAAA,EAAAA,GAAU,CAACC,KAAM,SAAjBD,EAjBL,SAAC,GAA2B,IAA1BE,EAAyB,EAAzBA,aAAcC,EAAW,EAAXA,MAC9B,OACI,kBAAMC,SAAUF,EAAhB,WACKG,EAAAA,EAAAA,IAAY,QAAS,QAAS,CAACC,EAAAA,GAAWC,EAAAA,KAC1CF,EAAAA,EAAAA,IAAY,WAAY,WAAY,CAACC,EAAAA,GAAWC,EAAAA,GAAO,CAACC,KAAM,cAC9DH,EAAAA,EAAAA,IACG,KAAM,aAAc,GAAIE,EAAAA,GAAO,CAACC,KAAM,YAAa,gBACvD,yBACKL,IAAS,gBAAKM,UAAWC,EAAAA,EAAAA,iBAAhB,SAA0CP,OAExD,0BACI,8CA6BhB,WAAeQ,EAAAA,EAAAA,KAJS,SAACC,GAAD,MAAY,CAChCC,OAAQD,EAAME,KAAKD,UAGiB,CAACE,MAAAA,EAAAA,GAAOC,OAAAA,EAAAA,IAAhD,EArBc,SAACC,GAKX,OAAIA,EAAMJ,QACC,SAAC,KAAD,CAAUK,GAAI,cAIrB,4BACI,mCACA,SAACnB,EAAD,CAAgBK,SAXP,SAACe,GACdF,EAAMF,MAAMI,EAASC,MAAOD,EAASE,SAAUF,EAASG","sources":["components/Login/Login.jsx"],"sourcesContent":["import {reduxForm} from 'redux-form';\r\nimport {createField, Input} from '../common/FormsControls/FormsControls';\r\nimport {required} from '../../utils/validators/validators';\r\nimport {connect} from 'react-redux';\r\nimport {login, logout} from '../../redux/auth-reducer';\r\nimport {Navigate} from 'react-router-dom';\r\nimport styles from '../common/FormsControls/FormsControls.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(\r\n                null, 'rememberMe', [], Input, {type: 'checkbox'}, 'remember me')}\r\n            <div>\r\n                {error && <div className={styles.formSummaryError}>{error}</div>}\r\n            </div>\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm);\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Navigate to={'/profile'}/>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginReduxForm onSubmit={onSubmit}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login, logout})(Login);\r\n"],"names":["LoginReduxForm","reduxForm","form","handleSubmit","error","onSubmit","createField","required","Input","type","className","styles","connect","state","isAuth","auth","login","logout","props","to","formData","email","password","rememberMe"],"sourceRoot":""}